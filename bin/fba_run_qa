#!/usr/bin/env python
"""
Create fiber assignment QA results.
"""
import os

import argparse

from fiberassign.qa import qa_tiles


def main():
    parser = argparse.ArgumentParser()

    parser.add_argument("--dir", type=str, required=True, default=None,
                        help="Directory containing fiberassign outputs.")

    parser.add_argument("--prefix", type=str, required=False,
                        default="fiberassign",
                        help="Prefix of each file (before the _<tile>.fits).")

    parser.add_argument("--out", type=str, required=False, default=None,
                        help="Output file for QA.  Default is a file in"
                        " directory containing the fiberassign output.")

    parser.add_argument("--tiles", type=str, required=False, default=None,
                        help="Comma-separated list of tiles to process "
                        "(default is all tiles)")

    parser.add_argument("--old", required=False, default=False,
                        action="store_true",
                        help="Files are old format.")

    args = parser.parse_args()

    # Check directory
    if not os.path.isdir(args.dir):
        raise RuntimeError("Results directory {} does not exist"
                           .format(args.dir))

    outdir = args.out
    if outdir is None:
        outdir = args.dir

FIXME: file, not dir


    tiles = None
    if args.tiles is not None:
        tiles = [int(x) for x in args.tiles.split(",")]

    qa_tiles(resultdir=args.dir, result_prefix=args.prefix,
             qa_out=outdir, tiles=tiles, old=args.old)

    return


if __name__ == "__main__":
    main()
